#ifndef PROBLEM_2_H
#define PROBLEM_2_H

#include <vector>
#include <algorithm>

// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

namespace problem2 {

    bool isOdd(int i) {
        return (i & 1) == 1;
    }

    std::vector<int> getFibNumbers(int max) {
        std::vector<int> list = {1, 2};
        int i = 1;

        while (true) {
            int val = list[i] + list[i - 1];
            if (val >= max)
                break;
            list.push_back(val);
            i++;
        }
        return list;
    }

    int getAnswer() {
        std::vector<int> list = getFibNumbers(4000000);
        //Remove the odds
        list.erase(std::remove_if(list.begin(), list.end(), [](int i) { return (i & 1) == 1; }), list.end());
        return std::accumulate(list.begin(), list.end(), 0);
    }

}

#endif
